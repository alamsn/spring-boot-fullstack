name: CD - Deploy React Frontend

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - frontend/react/**

jobs:
  deploys:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend/react

    steps:
      - uses: actions/checkout@v4
      - name: Slack Message - Commit message and sha
        run: >
          curl -X POST -H 'Content-type: application/json' 
          --data '{"text":":deployment-train: ${{ github.server_url }}/${{ github.sha }} - ${{ github.event.head_commit.message }}"}' 
          ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Slack Message - Deployment Start
        run: >
          curl -X POST -H 'Content-type: application/json' 
          --data '{"text":":deployment-train: Deployment Started"}' 
          ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Set build number
        id: build-number
        run: echo "BUILD_NUMBER=$(date '+%d.%m.%Y.%H.%M.%S')" >> $GITHUB_OUTPUT

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker Build and Push
        run: |
          chmod +x ../../.ci/build-publish.sh
          export USERNAME=alamsn
          export REPO=alamsn-react
          export TAG=${{ steps.build-number.outputs.BUILD_NUMBER }}
          ../../.ci/build-publish.sh . \
            --build-arg api_base_url=http://alamsn-fs.ap-southeast-1.elasticbeanstalk.com:8080

      - name: Slack Message - Push image to dockerhub
        run: >
          curl -X POST -H 'Content-type: application/json' 
          --data '{"text":":deployment-train: Image tag ${{steps.build-number.outputs.BUILD_NUMBER}} pushed to Dockerhub alamsn"}' 
          ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Update Dokerrun.aws.json api image with tag with new build number
        run: |
          echo "Dockerrun.aws.json before updating tag"
          cat ../../Dockerrun.aws.json
          sed -i -E 's_(alamsn/alamsn-react:)([^"]*)_\1'${{steps.build-number.outputs.BUILD_NUMBER}}'_' ../Dockerrun.aws.json
          echo "Dockerrun.aws.json after updating tag"
          cat ../../Dockerrun.aws.json

      - name: Slack Message - Start Deploy to Elastic Beanstalk
        run: >
          curl -X POST -H 'Content-type: application/json' 
          --data '{"text":":deployment-train: Starting deployment to Elastic Beanstalk"}' 
          ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Deploy to Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v21
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: ${{ secrets.EB_APPLICATION_NAME }}
          environment_name: ${{ secrets.EB_ENVIRONMENT_NAME }}
          version_label: ${{ steps.build-number.outputs.BUILD_NUMBER }}
          version_description: ${{ github.SHA }}
          region: ${{ secrets.EB_REGION }}
          deployment_package: Dockerrun.aws.json
          wait_for_environment_recovery: 60

      - name: Slack Message - Commit to repo
        run: >
          curl -X POST -H 'Content-type: application/json' 
          --data '{"text":":deployment-train: Commiting to repo"}' 
          ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Commit and push Dockerrun.aws.json
        run: |
          git config user.name "$(git log -n 1 --pretty=format:%an)"
          git config user.email "$(git log -n 1 --pretty=format:%ae)"
          git add ../../Dockerrun.aws.json
          git commit -m "Update Dockerrun.aws.json docker image with new tag ${{ steps.build-number.outputs.BUILD_NUMBER }}"
          git push

      - name: Slack Message - Deploy success
        run: >
          curl -X POST -H 'Content-type: application/json' 
          --data '{"text":":deployment-train: Deployment and commit completed ${{ secrets.EB_ENVIRONMENT_URL }}"}' 
          ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Slack Message - Status
        if: always()
        run: >
          curl -X POST -H 'Content-type: application/json' 
          --data '{"text":"Job Status ${{ job.status }}"}' 
          ${{ secrets.SLACK_WEBHOOK_URL }}